statements              : NEWLINE* expression (NEWLINE+ expression)* NEWLINE* BLOCK

expression              : KEYWORD:VAR IDENTIFIER EQALS expression
                        : comparison-expression ((KEYWORD:AND|KEYWORD:OR) comparison-expression)*

comp-expression         : NOT comparison-expression
                        : arithmetic-expression ((COMPARISON|LESS_THAN|GREATER_THAN|LESS_THAN_EQUALS|GREATER_THAN_EQUALS) arithmetic-expression)*

arithmetic-expression   : term ((PLUS|MINUS) term)*

term                    : factor ((MUL|DIV) factor)*

factor                  : (PLUS|MINUS) factor
                        : power

power                   : call (POWER factor)*

call                    : atom (LEFT_PARENTHESIS (expression (COMMA expression)*)? RIGHT_PARENTHESIS)?

atom                    : INT|FLOAT|STRING|IDENTIFIER
                        : LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
                        : list-expression
                        : if-expression
                        : for-expression
                        : while-expression
                        : function-definition

list-expression         : LEFT_SQUARE (expression (COMMA expression)*)? RIGHT_SQUARE

if-expression           : KEYWORD:IF expression KEYWORD:THEN
                        (expression if-expression-b|if-expression-c?)
                        | (NEWLINE statements KEYWORD:END|if-expression-b|if-expression-c)

if-expression-b         : KEYWORD:ELIF expression KEYWORD:THEN
                        (expr if-expression-b|if-expression-c?)
                        | (NEWLINE statements KEYWORD:END|if-expr-b|if-expr-c)

if-expression-c         : KEYWORD:ELSE
                        expression
                        | (NEWLINE statements KEYWORD:END)

for-expression          : KEYWORD:FOR IDENTIFIER EQALS expression KEYWORD:TO expression
                        (KEYWORD:STEP expression)? KEYWORD:THEN
                        expression
                        | (NEWLINE statements KEYWORD:END)

while-expression        : KEYWORD:WHILE expression KEYWORD:THEN
                        expression
                        | (NEWLINE statements KEYWORD:END)

function-definition    : KEYWORD:FUNC IDENTIFIER?
                        LEFT_PARENTHESIS (IDENTIFIER (COMMA IDENTIFIER)*)? RIGHT_PARENTHESIS
                        (FUNCTION_ASSIGNMENT expression)
                        | (NEWLINE statements KEYWORD:END)
